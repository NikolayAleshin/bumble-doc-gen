{% set title = 'BumbleDocGen' %}
<div class="hide_in_pages"><b><a href="https://***REMOVED***/pages/bumble-tech/bumble-doc-gen/index.html">Open the GitHub pages version of this document</a></b></div>

{{ "BumbleDocGen: A Documentation Generator for PHP projects" | textToHeading('H1') }}

BumbleDocGen is a robust library for generating and maintaining documentation next to the code of large and small PHP projects. This tool analyzes your codebase and produces a comprehensive set of markdown documents, including descriptions of classes, methods, and properties alongside navigable internal links.

{{ "Installation" | textToHeading('H2') }}

Add the BumbleDocGen to the `composer.json` file of your project using the following command:

```bash
composer require bumble/doc-gen
```

{{ "Detailed technical description" | textToHeading('H2') }}

Please refer to the <a href="tech/index.md">Description of the technical part of the project</a> for a detailed explanation of all the classes and methods used.

{{ "Core Features" | textToHeading('H2') }}

- Parsing:
  BumbleDocGen scans your project by parsing PHP files, extracting comments, and providing detailed models of your code.

- Rendering:
  BumbleDocGen generates markdown content using templates and fills them with data obtained from parsing your code.

- AI tools for documentation generation:
  BumbleDocGen allows you to use a group of AI tools to help generate project documentation.

{{ "How to Use" | textToHeading('H2') }}

{{ "Entry points" | textToHeading('H3') }}

BumbleDocGen's interface consists of mainly two classes: <a>DocGenerator</a> and <a>DocGeneratorFactory</a>.

- <a>DocGenerator</a> provides main operations for generating the documents.

  - `addMissingDocBlocks()`: This method creates missing docBlocks in your code.
  - `fillInReadmeMdTemplate()`: This method prepares the `README.md` file using a predefined template.
  - `generate()`: This method produces all necessary documentation.
  - `generateProjectTemplatesStructure()`: This method creates a structure for project templates.
  - `parseAndGetRootEntityCollectionsGroup()`: This method parses your project's files and collects information for the documentation.

- <a>DocGeneratorFactory</a> provides a method for creating `DocGenerator` instance.

  - `create(configurationFiles: string)`: This method creates a `DocGenerator` instance using provided configuration files.
  - `setCustomConfigurationParameters(customConfigurationParameters: array)`: This method sets custom configuration parameters for the `DocGenerator` creation.

{{ "Examples of usage" | textToHeading('H3') }}

```php
require_once 'vendor/autoload.php';

use BumbleDocGen\DocGeneratorFactory;

// Initialize the factory
$factory = new DocGeneratorFactory();

// Create a DocGenerator instance
$docgen = $factory->create('/path/to/configuration/files');

// Now call the desired operation
$docgen->generate();
```

------------------

**This documentation was generated using the Bumble Documentation Generator, and is an example of how it works.**

To update this documentation, run the following command:

{{ 'php SelfDoc/docGen.php generate' | textToCodeBlock('console') }}